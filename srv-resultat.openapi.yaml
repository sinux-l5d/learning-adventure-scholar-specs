openapi: 3.0.0
info:
  title: Service de résultat
  description: Il récupère les données utiles pour le professeur
  version: 0.1.0
  license:
    name: MIT License

servers:
  - url: http://127.0.0.1:3001
    description: Serveur local

paths:
  /tentatives:
    post:
      summary: Récupère les tentatives renvoyées par le service évaluation.

      tags:
        - Tentatives
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationPourResultat'               

      responses:
        '200':
          description: Réussi
          content:
            application/json:
              schema:
                type: object
                properties:
                  tentative:
                    allOf :
                      - $ref: '#/components/schemas/EvaluationPourResultat'
                      - type : object
                        properties :
                          id : 
                            type : string
                            format : objectId
                            example : 54f6sd5f75df3sdf

  /exercices/aides:
    post:
      summary: Récupère la demande d'aide renvoyée par l'étudiant'.
      tags:
        - Aides
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AideDepuisEtudiant'               

      responses:
        '200':
          description: Réussi
          content:
            application/json:
              schema:
                type: object
                properties:
                  aide :
                    allOf :
                      - $ref: '#/components/schemas/AideDepuisEtudiant'
                      

  /exercices/{idExoEtu}/aides:
    put:
      summary: met à jour les demandes d'aide'.
      tags:
        - Aides
      parameters:
        - in: path
          name: idExoEtu
          required: true
          schema:
            type: string
            format: ObjectId

      responses:
        '200':
          description: Réussi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aide'
               

  /exercices:
    post:
      summary: récupère l'exercice commencé par un étudiant
      tags:
        - Exercices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExercicePourResultat'
      responses:
        '200':
          description: Réussi
          content:
            application/json:
              schema:
                type: object
                properties:
                  exercice:
                    allOf :
                      - $ref: '#/components/schemas/ExercicePourResultat'
                      - type : object
                        properties :
                          estFini : 
                            type : boolean
                            example : false
                          id : 
                            type : string
                            format : objectId
                            example : 54f6sd5f75df3sdf
                 
    get:
      summary: Liste de tout les exercices commencés par un étudiant
      tags:
        - Exercices
      security:
        - UserProfile: []
        - DevBearer: []
      responses:
        '200':
          description: Réussi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExercicePourResultat'
                    
  /oauth:
    get:
      summary: Redirige vers le portail d'authentification
      tags:
        - OAuth2
      responses:
        '302':
          description: Redirection
          headers:
            Location:
              schema:
                type: string
                format: url
                example: http://learninglab.example.com/oauth/authorize?client_id=las&redirect_uri=http%3A%2F%2Flocalhost%3A3001%2Foauth%2Fuserprofile&response_type=code&state=123456789&scope=openid
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: url
                    example: http://learninglab.example.com/oauth/authorize?client_id=las&redirect_uri=http%3A%2F%2Flocalhost%3A3001%2Foauth%2Fuserprofile&response_type=code&state=123456789&scope=openid
  /oauth/userprofile:
    get:
      summary: Callback de l'API OAuth2
      description: Route utilisée par l'API OAuth2 pour récupérer les informations de l'utilisateur
      tags:
        - OAuth2
      responses:
        '200':
          description: Réussi
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    format: string
                    example: 0325495fc8825f656dd08bc1e0a13c257f0ad249
                  refreshToken:
                    type: string
                    format: string
                    example: 154c3ab67cf6e83aafac10fc9fe68ab7f003df13

components:
  schemas: 
    ExercicePourResultat:
      type: object
      properties:
        idExo:
          type: string
          format: ObjectId
          description: Id natif de Mongo-db
          example: 507f1f77bcf86cd799439011
        idEtu: 
          type: string
          pattern: '^[a-zA-Z][a-zA-Z\-]*[a-zA-Z]\.[a-zA-Z][a-zA-Z\-]*[a-zA-Z]$'
          example: david.wayntal
        idSession: 
          type: string
          format: ObjectId
        idSeance:
          type: string
          format: ObjectId
        nomExo:
          type: string
          format: string
          example: boucle en C
        nomSession:
          type: string
          format: string
          example: L3 groupe 1 C
        difficulte:
          type: integer
          minimum: 1
          maximum: 10
        themes:
          type: array
          items:
            type: string
            format: keyword
          description: Mots clés/étiquettes de l'exercice
          example:
            - boucle
            - fonction
            - condition
            - trie
        langage:
          type: string
          example: C
        tempsMoyen:
          type: number
          format: float
          description: Le temps moyen estimé pour cette exerice
        tempsMaximum:
          type: number
          format: float
          description: Le temps maximum mis pour cette exercice
        tentatives :
          type : array
          items :
            $ref: '#/components/schemas/Tentative'
          example : []
          description : le code de l'étudiant avec ses logs d'erreur
        debut :
          type : string
          format : date-time
        aides :
          type : array
          items :
            $ref: '#/components/schemas/Aide'
          example : []
          description : les demandes d'aide de l'étudiant


    EvaluationPourResultat:
      type: object
      properties:
        idEtu:
          type: string
          format: ObjectId
          description: Id natif de Mongo-db
          example: 45fds4657dsffg56sg5d4cx2
        idExo:
          type: string
          format: ObjectId
          description: Id natif de Mongo-db
          example: 507f1f77bcf86cd799439011
        idSession : 
          type: string
          format: string
          example: 45sdf6sdf
        reponseEtudiant:
          type: string
          description : code écrit par l'étudiant
          example : int a=1; for (int i=0 ; i<n;i++) {a=a*i;}
        logErreurs:
          type: string
          description : message(s) d'erreur(s)
          example : error segmentation ...
        validationExercice:
          type: boolean
          description : vrai si l'exercice et réussi, faux sinon
        dateSoumission :
          type: string 
          format: date-time
          description : date à laquelle le service évaluation à soumis sa réponse
          
    Tentative:
      type: object
      properties:
        reponseEtudiant:
          type: string
          description : code écrit par l'étudiant
          example : int a=1; for (int i=0 ; i<n;i++) {a=a*i;}
        logErreurs:
          type: string
          description : message(s) d'erreur(s)
          example : error segmentation ...
        validationExercice:
          type: boolean
          description : vrai si l'exercice est réussi, faux sinon
        dateSoumission :
          type: string 
          format: date-time
          description : date à laquelle le service évaluation à soumis sa réponse

    Aide :
      type: object
      properties:
        id :
          type: string
          description : id de la demande d'aide
          example : l54sqd42sq2
        date :
          type: string 
          format: date-time
          description : date à laquelle la demande d'aide a été effectuée
        resolue:
          type: boolean
          description : faux si l'enseignant n'a pas fait d'action vers cet étudiant

    AideDepuisEtudiant :
      type: object
      properties:
        idExo :
          type: string
          description : id de l'exercice sur lequel la demande d'aide est effectuée
          example : l54sqd42sq2
        idEtu :
          type: string
          description : id de l'etudiant faisant la demande
          example : 6dsqf4df46gh
        idSession :
          type: string
          description : id de la session concernée par cet exercice
          example : lqs65d4qs6d52 
        idSeance :
          type: string
          description : id de la séance concernée par cet exercice
          example : fg6h7dffh456
  securitySchemes:
    UserProfile:
      type: oauth2
      description: Authentification OAuth2 avec le UserProfile (authorizationCode flow)
      flows:
        authorizationCode:
          authorizationUrl: http://userprofile.learninglab.eu/oauth/authorize
          tokenUrl: http://userprofile.learninglab.eu/oauth/token
          scopes:
            openid: "Permet authentification"
    DevBearer:
      type: http
      scheme: bearer
